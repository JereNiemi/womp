generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Note {
  id          Int       @id(map: "PK_notes") @default(autoincrement())
  author_id   Int?
  note        String?   @db.VarChar
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)

  @@map("notes") // mappar prisma-obj Note till tabellen "notes"
}

model User {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  email            String         @unique
  role             String         @default("user")
  name             String?
  password         String?
  refreshTokens    RefreshToken[] // Relation till refresh tokens

  @@map("users") // Explicit mappning rekommenderas
}

model Test {
  id    Int    @id @default(autoincrement())
  name  String
}

// Ny tabell för Refresh Tokens
model RefreshToken {
  id           Int       @id @default(autoincrement())
  userId       Int       // Foreign Key till User
  token        String    @unique // Refresh token-strängen
  issued_at    DateTime  @default(now())
  expires_at   DateTime

  // Relation till User-modellen
  user         User      @relation(fields: [userId], references: [id])

  @@unique([userId, token]) // Säkerställer att en användare inte kan ha samma token flera gånger (även om 'token' är unique)
  @@map("refresh_tokens")
}